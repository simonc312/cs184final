#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrartcl
\begin_preamble
% DO NOT ALTER THIS PREAMBLE!!!
%
% This preamble is designed to ensure that the file prints
% out as advertised. If you mess with this preamble,
% parts of this document may not print out as expected.  If you
% have problems LaTeXing this file, please contact 
% the documentation team
% email: lyx-docs@lists.lyx.org

% if pdflatex is used
\usepackage{ifpdf}
\ifpdf

% set fonts for nicer pdf view
\IfFileExists{lmodern.sty}
 {\usepackage{lmodern}}{}

\fi % end if pdflatex is used

% Folgendes Problem lösen:
% Besteht die Kapitelnummer aus zu vielen Ziffern, wird  die
% Kapitelüberschrift im Inhaltsverzeichnis direkt an oder über
% die Kapitelnummer geschrieben.
% Als Lösung wird mehr Platz zwischen Nummer und
% Überschrift eingefügt.
\renewcommand{\l@subsection}{\@dottedtocline{2}{1.5em}{2.8em}}
\renewcommand{\l@subsubsection}{\@dottedtocline{3}{4.3em}{3.6em}}

% To be able to enter the character ° and · directly in LyX,
% see sec. 22.11
\DeclareInputText{176}{\ifmmode^\circ\else\textdegree\fi}
\DeclareInputText{183}{\ifmmode\cdot\else\textperiodcentered\fi}

% increase link area for cross-references and autoname them,
\AtBeginDocument{\renewcommand{\ref}[1]{\mbox{\autoref{#1}}}}
\addto\extrasenglish{%
 \renewcommand*{\equationautorefname}[1]{}
 \renewcommand{\sectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsectionautorefname}{sec.\negthinspace}
 \renewcommand{\subsubsectionautorefname}{sec.\negthinspace}
}

% don't load packages twice
% see first footnote in sec. 9.3
\@ifundefined{textcolor}{\usepackage{color}}{}

% the pages of the TOC are numbered roman
% and a PDF-bookmark for the TOC is added
\pagenumbering{roman}
\let\myTOC\tableofcontents
\renewcommand{\tableofcontents}{%
 \vspace{1cm}
 \pdfbookmark[1]{\contentsname}{}
 \myTOC
 \cleardoublepage
 \pagenumbering{arabic}}

% insert additional vertical space of 1.5 mm between footnotes,
\let\myFoot\footnote
\renewcommand{\footnote}[1]{\myFoot{#1\vspace{1.5mm}}}

% provides caption formatting
\setkomafont{captionlabel}{\bfseries}

% used in sec. 24.5
\usepackage[samesize]{cancel}

% enables calculation of values
\usepackage{calc}

% for multiple columns used in sec. 24.7
\usepackage{multicol}

% needed in sec. 19.4
\usepackage{remreset}

% for the Fourier transformation symbol
\usepackage{mathrsfs}

% define a color, used in sec.9.3
\definecolor{darkgreen}{cmyk}{0.5, 0, 1, 0.5}

% declare operators (see sec. 10.4 and sec. 15.2)
\DeclareMathOperator*{\Lozenge}{\blacklozenge}
\DeclareMathOperator{\sgn}{sgn}

\newcommand{\spce}{\textvisiblespace}

% example definitions for sec. 20.1 
\newcommand{\gr}{\Longrightarrow}
\newcommand{\us}[1]{\underline{#1}}
\newcommand{\fb}[3]{\framebox#1#2{$#3$}}
\newcommand{\cb}[3][white]{\fcolorbox{#2}{#1}{$#3$}}
\newcommand{\fracS}[3][]{\genfrac{}{}{#1}{}{#2}{#3}}

% example macro from sec. 19.4
%\def\tagform@#1{\maketag@@@{|#1|}}

% macro from sec. 10.2
\def\clap#1{\hbox to 0pt{\hss #1\hss}}
\def\mathclap {\mathpalette \mathclapinternal}
\def\mathclapinternal #1#2{\clap{$\mathsurround =0pt #1{#2}$}}


% ------------------------------------
% used to check for needed LaTeX packages
\usepackage{ifthen}

% check for package eurosym
% used for the Euro symbol
\newboolean{eurosym}
\IfFileExists{eurosym.sty}
 {\usepackage[gennarrow]{eurosym}
  \setboolean{eurosym}{true}}
 {\setboolean{eurosym}{false}}

% check for package braket
% used for physical vectors
\newboolean{braket}
\IfFileExists{braket.sty}
 {\usepackage{braket}
  \setboolean{braket}{true}}
 {\setboolean{braket}{false}}

% check for package cancel
\newboolean{cancel}
\IfFileExists{cancel.sty}
 {\usepackage{cancel}
  \setboolean{cancel}{true}}
 {\setboolean{cancel}{false}}

% check for package upgreek
\newboolean{upgreek}
\IfFileExists{upgreek.sty}
 {\usepackage{upgreek}
  \setboolean{upgreek}{true}}
 {\setboolean{upgreek}{false}}
\end_preamble
\options bibliography=totoc,index=totoc,BCOR7.5mm,titlepage,captions=tableheading
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "LyX's Math Manual"
\pdf_author "LyX Team, Uwe Stöhr"
\pdf_subject "LyX-documentation about math"
\pdf_keywords "LyX, Mathed"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "linkcolor=black, citecolor=black, urlcolor=blue, filecolor=blue, pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize a4paper
\use_geometry false
\use_amsmath 2
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\notefontcolor #0000ff
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 4
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle plain
\bullet 1 0 6 -1
\bullet 2 2 35 -1
\bullet 3 2 7 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Author
Alex Liu cs184-bo 
\end_layout

\begin_layout Author
Shiwei Chen cs184-cx
\end_layout

\begin_layout Title
Fluid Simulation With Smoothed Particle Hydrodynamics
\end_layout

\begin_layout Section*
Abstract
\end_layout

\begin_layout Standard
We implement Lagrangian Fluid Dynamics using smooth particle hydrodynamics.
 To calculate the forces (gravity, pressure, viscosity, and surface tension)
 acting on each particle, we use the standard approximations of the Navier-Stoke
s equations involving smoothing kernels.
 We use OpenGL for rendering and FreeImage to output the rendered images.
 To improve computation time, we implement a spatial array of grid cells.
 For surface reconstruction, we use Marching Cubes to extract an approximation
 of the isosurface based on a density threshold.
 We found that to produce favourable and pseudo-realistic simulations, the
 constants had to be carefully selected.
 In particular, the stiffness and rest density constants required the most
 fine-tuning.
\end_layout

\begin_layout Section*
Introduction
\end_layout

\begin_layout Standard
Smoothed particle hydrodynamics (SPH) essentially discretises a fluid into
 a particle field; each particle has a mass, position, and velocity.
 From these three values, SPH interpolates a value from the field at point
 
\begin_inset Formula $x$
\end_inset

 based on a weighted average 
\begin_inset Formula 
\[
A(x)={\displaystyle \sum_{i}A_{i}\frac{m_{i}}{\rho_{i}}W(x-x_{i},h)}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $A_{i}$
\end_inset

 is the value, 
\begin_inset Formula $m_{i}$
\end_inset

 is the mass, and 
\begin_inset Formula $\rho_{i}$
\end_inset

 is the density at particle 
\begin_inset Formula $i$
\end_inset

.
 
\begin_inset Formula $W$
\end_inset

 is a smoothing kernel function with distance 
\begin_inset Formula $x-x_{i}$
\end_inset

 between two particles, and 
\begin_inset Formula $h$
\end_inset

 a radius of support.
 
\end_layout

\begin_layout Section*
Navier-Stokes Equation
\end_layout

\begin_layout Standard
The Navier-Stokes equations describe the motion of fluid substances.
 The version we use for our simulation is 
\begin_inset Formula 
\[
\mathbf{f_{total}}=-\nabla p+\mu\nabla^{2}\mathbf{v}+\mathbf{f}_{external}
\]

\end_inset


\end_layout

\begin_layout Standard
By solving this equation, we find the total force acting upon each particle.
 With this force, we can calculate the acceleration of each particle by
 dividing by its density.
 Afterwards, we use leapfrog integration to calculate a new velocity and
 new position for each particle.
 By repeating this method over many time steps, we simulate the motion of
 a fluid over time.
 
\end_layout

\begin_layout Standard
All of the individual force calculations require the particle's density.
 Therefore, we calculate the density of every particle before the force
 calculations using 
\begin_inset Formula 
\[
\rho_{i}=\sum_{j}m_{j}W(\mathbf{x}_{i}-\mathbf{x}_{j})
\]

\end_inset


\end_layout

\begin_layout Subsection*
Pressure
\end_layout

\begin_layout Standard
From the Navier-Stokes equation, 
\begin_inset Formula $\mathbf{f}_{pressure}=-\nabla p$
\end_inset

.
 Originally, to calculate 
\begin_inset Formula $p$
\end_inset

, we used the equation provide in class 
\begin_inset Formula 
\[
p=k((\frac{\rho}{\rho_{0}})^{7}-1)
\]

\end_inset


\end_layout

\begin_layout Standard
However, we were unable to find satisfactory constants for good pressure
 behaviour, where particles should be incompressible.
 Therefore, we used the pressure equation provided by Kelager
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p=k(\rho-\rho_{0})
\]

\end_inset

where 
\begin_inset Formula $\rho_{o}$
\end_inset

 is the rest density and 
\begin_inset Formula $k$
\end_inset

 is stiffness.
 As the density approaches the rest density, the attraction-repulsion force
 is minimised.
 
\end_layout

\begin_layout Standard
Once the pressure is calculated, to calculate 
\begin_inset Formula $\mathbf{f}_{pressure}$
\end_inset

 using SPH, we use the symmetric equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbf{f}_{i}^{pressure}=-\sum_{j}(\frac{p_{i}+p_{j}}{2})\frac{m_{j}}{\rho_{j}}\nabla W(\mathbf{x}_{i}-\mathbf{x}_{j},h)
\]

\end_inset


\end_layout

\begin_layout Standard
to preserve Newton's third law, where the force between particles should
 be equal and opposite.
 
\end_layout

\begin_layout Subsection*
Viscosity
\end_layout

\begin_layout Standard
The Navier-Stokes equation provides viscosity as 
\begin_inset Formula $\mathbf{f}_{viscosity}=\mu\nabla^{2}\mathbf{v}$
\end_inset

, where 
\begin_inset Formula $\mu$
\end_inset

 is the coefficient of viscosity of the fluid.
 Similarly to the pressure gradient, to calculate 
\begin_inset Formula $\mathbf{f}_{viscosity}$
\end_inset

 in SPH, we use the symmetric equation
\end_layout

\begin_layout Subsection*
\begin_inset Formula 
\[
\mathbf{f}_{i}^{viscosity}=\mu\sum_{j}(\mathbf{v}_{j}-\mathbf{v}_{i})\frac{m_{j}}{\rho_{j}}\nabla^{2}W(\mathbf{x}_{i}-\mathbf{x}_{j},h)
\]

\end_inset

Surface Tension
\end_layout

\begin_layout Standard
We used two external forces: surface tension and gravity.
 We used the surface tension equation provided by the Kelager paper
\begin_inset Formula 
\[
\mathbf{f}_{tension}=-\sigma\nabla^{2}c_{i}\mathbf{n}_{i}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\sigma$
\end_inset

 is the tension coefficient, 
\begin_inset Formula $c_{i}$
\end_inset

 is the colour field with 
\begin_inset Formula $c=1$
\end_inset

 exactly at particle locations and 
\begin_inset Formula $0$
\end_inset

 elsewhere, and 
\begin_inset Formula $\mathbf{n}_{i}$
\end_inset

 is the normalised inward surface normal of the fluid at particle 
\begin_inset Formula $i$
\end_inset

.
\end_layout

\begin_layout Subsection*
Gravity
\end_layout

\begin_layout Standard
Gravity is defined simply as 
\begin_inset Formula 
\[
\mathbf{f}_{gravity}=\rho\mathbf{g}
\]

\end_inset


\end_layout

\begin_layout Standard
By summing these four forces together, we get 
\begin_inset Formula $\mathbf{f_{total}}$
\end_inset

 per particle, from which acceleration, a new velocity, and a new position
 is calculated.
\end_layout

\begin_layout Section*
Kernels
\end_layout

\begin_layout Standard
One of the hallmarks of the SPH equations are the smoothing kernels.
 Originally, we used just the Gaussian kernel and its derivatives for all
 smoothing kernels provided by Intel 
\begin_inset Formula 
\[
e^{-4q^{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
but this gave poor results for pressure and viscosity, so we tried the Poly6
 kernel, also provided by Intel
\begin_inset Formula 
\[
(1-q^{2})^{3}
\]

\end_inset


\end_layout

\begin_layout Standard
Again, this gave us poor results for pressure and viscosity.
 Finally, we used Kelager's recommendation to have different smoothing kernels
 for different forces.
 By using those kernels, we achieved much better results.
 For our default kernel, we used 
\begin_inset Formula 
\[
W_{default}(\mathbf{r},h)=\frac{315}{64\pi h^{9}}(h^{2}-||\mathbf{r}||^{2})^{3}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\mathbf{r}$
\end_inset

 is the vector between two particles.
\end_layout

\begin_layout Subsection*
Pressure
\end_layout

\begin_layout Standard
For pressure, we used the kernel 
\begin_inset Formula 
\[
W_{pressure}(\mathbf{r},h)=\frac{15}{\pi h^{6}}(h-||\mathbf{r}||)^{3}
\]

\end_inset


\end_layout

\begin_layout Standard
because as 
\begin_inset Formula $\mathbf{r}\rightarrow0$
\end_inset

, the default kernel approaches 
\begin_inset Formula $0$
\end_inset

, which results in particle clustering at high pressure areas.
 Whereas 
\begin_inset Formula $W_{pressure}$
\end_inset

 prevents clustering.
 For the actual force calculation, we need the gradient of 
\begin_inset Formula $W_{pressure}$
\end_inset

, given by 
\begin_inset Formula 
\[
\nabla W_{pressure}(\mathbf{r},h)=-\frac{45}{\pi h^{6}}\frac{\mathbf{r}}{||\mathbf{r}||}(h-||\mathbf{r}||)^{2}
\]

\end_inset


\end_layout

\begin_layout Subsection*
Viscosity
\end_layout

\begin_layout Standard
For viscosity, we used the kernel 
\begin_inset Formula 
\[
W_{viscosity}(\mathbf{r},h)=\frac{15}{2\pi h^{3}}(-\frac{||\mathbf{r}||^{3}}{2h^{3}}+\frac{||\mathbf{r}||^{2}}{h^{2}}+\frac{h}{2||\mathbf{r}||}-1)
\]

\end_inset


\end_layout

\begin_layout Standard
because we require the Laplacian of this kernel to be positive everywhere
 in order to properly damp the velocity.
 The default and pressure kernels do not provide this property.
 For the actual force calculation, we use the Laplacian 
\begin_inset Formula 
\[
\nabla^{2}W_{viscosity}(\mathbf{r},h)=\frac{45}{\pi h^{6}}(h-||\mathbf{r}||)
\]

\end_inset


\end_layout

\begin_layout Section*
Improving Computation Time
\end_layout

\begin_layout Standard
The naive approach to fluid simulation using SPH compares every single particle
 to every other particle in both the density and force calculations, which
 results in a runtime of 
\begin_inset Formula $O(n^{2})$
\end_inset

, where 
\begin_inset Formula $n$
\end_inset

 is the number of particles.
 To improve the runtime, we first tried to use spatial hashing as recommended
 in the Kelager paper, but our simulation behaviour was unstable because
 not all neighbouring particles were accounted for.
 Therefore, we turned to a Gridcell based approach, where we divide the
 space up into gridcells, and created an association between a particle
 and the gridcell it belonged to.
 To find neighbouring particles, we iterated over a bounding box of neighbouring
 gridcells.
 This reduces the runtime to 
\begin_inset Formula $O(nm)$
\end_inset

, where 
\begin_inset Formula $m$
\end_inset

 is the average number of neighbouring particles.
 
\end_layout

\begin_layout Section*
Surface Reconstruction
\end_layout

\begin_layout Standard
For surface reconstruction, we use a Marching Cubes algorithm, provided
 by Bourke.
 In this algorithm, instead of determining cases for the 15 unique configuration
s, this algorithm uses two lookup table for all 256 configurations.
 The first lookup table maps the vertices underneath the isosurface to their
 intersecting edges.
 The second lookup table is a list of triangle vertices (which uses the
 same index as the first lookup table) that are required to properly reconstruct
 the surface of the fluid.
 
\end_layout

\begin_layout Standard
To determine whether a vertex was underneath the isosurface, we use the
 densities at each vertex of a marching cube gridcell.
 In order to calculate and store those densities, we create a grid of 'ghost'
 particles with positions corresponding to the vertices.
 The isolevel we use is determined by the average density across all of
 the 'ghost' particles.
 
\end_layout

\begin_layout Section*
Results
\end_layout

\begin_layout Section*
Conclusion
\end_layout

\begin_layout Standard
For our final project, we implemented a basic fluid simulation using smoothed
 particle hydrodynamics.
 To achieve desirable behaviour, we experimented with different kernels
 and constants throughout the course of the project.
 To reconstruct the surface, we implemented a Marching Cubes algorithm that
 used lookup tables.
 
\end_layout

\begin_layout Standard
For future consideration, we could implement better collision handling to
 include collisions with non-container objects; implement ray-tracing to
 render more realistic water with refraction and reflection; or attempt
 to do this in real time.
 We noticed that marching cubes did not reconstruct the surface as well
 as we would have liked; the reconstructed surfaces were more globular than
 smooth.
 Because of that, another future consideration is to use anisotropic kernels
 that transform the spherical particles into ellipsoids at the edges.
 
\end_layout

\begin_layout Section*
References
\end_layout

\begin_layout Standard
Bourke, Paul, 
\begin_inset Quotes eld
\end_inset

Polygonising a scalar field,
\begin_inset Quotes erd
\end_inset

 May 1994.
\end_layout

\begin_layout Standard
Gourlay, Michael J., 
\begin_inset Quotes eld
\end_inset

Fluid Simulation for Video Games (part 15),
\begin_inset Quotes erd
\end_inset

 
\emph on
Intel Developer Zone, 
\emph default
January 23, 2013.
\end_layout

\begin_layout Standard
Kelager, M., 
\begin_inset Quotes eld
\end_inset

Lagrangian Fluid Dynamics Using Smoothed Particle Hydrodynamics,
\begin_inset Quotes erd
\end_inset

 
\emph on
Department of Computer Science, University of Copenhagen, 
\emph default
January 9th, 2006.
\end_layout

\end_body
\end_document
